#include <stdio.h>
#include <unistd.h>
#include <stdlib.h>
#include <sys/types.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <string.h>

float servicioCelsiusAFahrenheit(float celsius) {
	return (celsius * 9.0 / 5.0) + 32.0;
}


float servicioFahrenheitACelsius(float fahrenheit) {
	return (fahrenheit - 32.0) * 5.0 / 9.0;
}
int main(int argc, char *argv[]) {
	
	int server_fd, new_socket;
	struct sockaddr_in address;
	int opt = 1;
	int addrlen = sizeof(address);
	char buffer[1024] = {0};
	
	if ((server_fd = socket(AF_INET, SOCK_STREAM, 0)) == 0) {
		perror("socket failed");
		exit(EXIT_FAILURE);
	}
	
	
	if (setsockopt(server_fd, SOL_SOCKET, SO_REUSEADDR, &opt, sizeof(opt))) {
		perror("setsockopt");
		exit(EXIT_FAILURE);
	}
	address.sin_family = AF_INET;
	address.sin_addr.s_addr = INADDR_ANY;  
	address.sin_port = htons(9050);    
	
	if (bind(server_fd, (struct sockaddr *)&address, sizeof(address)) < 0) {
		perror("bind failed");
		exit(EXIT_FAILURE);
	}
	
	
	if (listen(server_fd, 3) < 0) {
		perror("listen");
		exit(EXIT_FAILURE);
	}
	
	printf("Servidor escuchando en el puerto %d...\n",9050);
	
	while (1) {
		if ((new_socket = accept(server_fd, (struct sockaddr *)&address, (socklen_t*)&addrlen)) < 0) {
			perror("accept");
			exit(EXIT_FAILURE);
		}
		
		
		int valread = read(new_socket, buffer, 1024);
		buffer[valread] = '\0';  
		
		printf("Peticiￃﾳn recibida: %s\n", buffer);
		
		
		char *p = strtok(buffer, "/");
		char tipo_conversion;
		float valor, resultado;
		char respuesta[200] = "";
		
		while (p != NULL) {
			tipo_conversion = p[0];  
			p = strtok(NULL, "/"); 
			if (p == NULL) break;  
			
			valor = atof(p);
			if (tipo_conversion == 'C') {
				resultado = servicioCelsiusAFahrenheit(valor);
				char temp[100];
				sprintf(temp, "%.2fﾰC = %.2fﾰF\n", valor, resultado);
				strcat(respuesta, temp);
			}
			else if (tipo_conversion == 'F') {
				resultado = servicioFahrenheitACelsius(valor);
				char temp[100];
				sprintf(temp, "%.2fﾰF = %.2fﾰC\n", valor, resultado);
				strcat(respuesta, temp);
			}
			
			p = strtok(NULL, "/");  
		}
		send(new_socket, respuesta, strlen(respuesta), 0);
		printf("Respuesta enviada: %s\n", respuesta);
		
		
		close(new_socket);
	}
	
	return 0;
}
	
	
